name: Sync BigQuery to Supabase

on:
  # Run daily at 6 AM UTC (2 AM EST)
  schedule:
    - cron: '0 6 * * *'
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      limit:
        description: 'Limit number of records to sync (leave empty for all)'
        required: false
        type: string
      sync_storeleads:
        description: 'Sync storeleads data'
        required: false
        type: boolean
        default: true

env:
  PYTHON_VERSION: '3.11'

jobs:
  sync-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Set up BigQuery credentials
      run: |
        echo '${{ secrets.BIGQUERY_CREDENTIALS }}' > bigquery_credentials.json
    
    - name: Verify sync script exists
      run: |
        if [ ! -f "sync_bigquery_to_supabase.py" ]; then
          echo "‚ùå Sync script not found in root directory"
          find . -name "sync_bigquery_to_supabase.py" -type f
          exit 1
        else
          echo "‚úÖ Sync script found: sync_bigquery_to_supabase.py"
        fi
    
    - name: Run BigQuery to Supabase sync
      env:
        GOOGLE_APPLICATION_CREDENTIALS: bigquery_credentials.json
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        PYTHONUNBUFFERED: "1"
      run: |
        echo "üöÄ Starting BigQuery to Supabase sync..."
        echo "üîß Python version: $(python --version)"
        python -u sync_bigquery_to_supabase.py
    
    - name: Clean up credentials
      if: always()
      run: |
        rm -f bigquery_credentials.json
    
    - name: Summary
      if: success()
      run: |
        echo "‚úÖ Sync job completed successfully!"
        echo "üìä Email campaign data synced from BigQuery to Supabase"
        echo "üîç Check Supabase dashboard for updated data"

    - name: Send Slack notification
      if: always()
      run: |
        # Determine status and emoji
        if [ "${{ job.status }}" = "success" ]; then
          STATUS_EMOJI="‚úÖ"
          STATUS_COLOR="good"
          STATUS_TEXT="SUCCESS"
          NEXT_STEPS="‚Ä¢ Pulse app data refreshed\\n‚Ä¢ Frontend cache updated"
        else
          STATUS_EMOJI="‚ùå"
          STATUS_COLOR="danger"
          STATUS_TEXT="FAILED"
          NEXT_STEPS="üö® Check workflow logs and fix issues"
        fi
        
        # Create Slack message
        curl -X POST "${{ secrets.SLACK_WEBHOOK_URL }}" \
          -H "Content-Type: application/json" \
          -d "{
            \"text\": \"üîÑ Data Sync $STATUS_EMOJI $STATUS_TEXT\",
            \"attachments\": [
              {
                \"color\": \"$STATUS_COLOR\",
                \"fields\": [
                  {
                    \"title\": \"Workflow\",
                    \"value\": \"üîÑ BigQuery to Supabase Sync\",
                    \"short\": true
                  },
                  {
                    \"title\": \"Status\",
                    \"value\": \"$STATUS_EMOJI $STATUS_TEXT\",
                    \"short\": true
                  },
                  {
                    \"title\": \"Description\",
                    \"value\": \"Email campaign data synchronized from BigQuery to Supabase\",
                    \"short\": false
                  },
                  {
                    \"title\": \"Next Steps\",
                    \"value\": \"$NEXT_STEPS\",
                    \"short\": false
                  }
                ],
                \"actions\": [
                  {
                    \"type\": \"button\",
                    \"text\": \"View Run\",
                    \"url\": \"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\",
                    \"style\": \"$([ '${{ job.status }}' = 'success' ] && echo 'primary' || echo 'danger')\"
                  }
                ],
                \"footer\": \"GitHub Actions\",
                \"ts\": $(date +%s)
              }
            ]
          }" 